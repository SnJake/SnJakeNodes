import random
import sys

class SnJakeRandomNumberGenerator:
    
    FUNCTION = "generate_numbers"
    CATEGORY = "üòé SnJake/Utils"
    # –î–ª—è —è—Å–Ω–æ—Å—Ç–∏ —è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª –≤—ã—Ö–æ–¥—ã
    RETURN_TYPES = ("INT", "FLOAT", "INT")
    RETURN_NAMES = ("seed_out", "float_out", "int_out")

    @classmethod
    def INPUT_TYPES(cls):
        return {
            "required": {
                "seed": ("INT", {
                    "default": 0,
                    "min": 0,
                    "max": 0xffffffffffffffff,
                    "control_after_generate": True,
                }),
                "min_float": ("FLOAT", {"default": 0.0, "min": -sys.maxsize, "max": sys.maxsize, "step": 0.01, "round": 0.001}),
                "max_float": ("FLOAT", {"default": 1.0, "min": -sys.maxsize, "max": sys.maxsize, "step": 0.01, "round": 0.001}),
                "min_int": ("INT", {"default": 0, "min": -sys.maxsize, "max": sys.maxsize}),
                "max_int": ("INT", {"default": 1024, "min": -sys.maxsize, "max": sys.maxsize}),
            }
        }

    def generate_numbers(self, seed, min_float, max_float, min_int, max_int):
        # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ min –Ω–µ –±–æ–ª—å—à–µ max. –ï—Å–ª–∏ —ç—Ç–æ —Ç–∞–∫, –º–µ–Ω—è–µ–º –∏—Ö –º–µ—Å—Ç–∞–º–∏.
        if min_float > max_float:
            min_float, max_float = max_float, min_float
        if min_int > max_int:
            min_int, max_int = max_int, min_int

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º seed, —á—Ç–æ–±—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –±—ã–ª–∞ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–π
        random.seed(seed)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —á–∏—Å–ª–∞ –≤ –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω–∞—Ö
        generated_float = random.uniform(min_float, max_float)
        generated_int = random.randint(min_int, max_int)
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º seed (–∫–∞–∫ –ø–µ—Ä–≤—ã–π –≤—ã—Ö–æ–¥) –∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∏—Å–ª–∞
        return (seed, generated_float, generated_int)
