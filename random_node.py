import random
import sys

class SnJakeRandomNumberGenerator:
    """
    –≠—Ç–∞ –Ω–æ–¥–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ —á–∏—Å–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ö–æ–¥–Ω–æ–≥–æ seed.
    –û–Ω–∞ –Ω–µ –∏–º–µ–µ—Ç –≤—Ö–æ–¥–Ω—ã—Ö —Å–æ–∫–µ—Ç–æ–≤, —Ç–æ–ª—å–∫–æ –≤–∏–¥–∂–µ—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
    """
    
    FUNCTION = "generate_numbers"
    CATEGORY = "üòé SnJake/Utils"
    RETURN_TYPES = ("INT", "FLOAT", "FLOAT", "INT")
    RETURN_NAMES = ("seed", "number", "float", "int")

    @classmethod
    def INPUT_TYPES(cls):
        return {
            "required": {
                "seed": ("INT", {
                    "default": 0,
                    "min": 0,
                    "max": 0xffffffffffffffff,
                    "control_after_generate": True, # –î–æ–±–∞–≤–ª—è–µ—Ç –æ–ø—Ü–∏—é 'control_after_generate'
                }),
            }
        }

    def generate_numbers(self, seed):
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º seed –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        random.seed(seed)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π float –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 0.0 –¥–æ 100.0 –¥–ª—è –≤—ã—Ö–æ–¥–∞ "number"
        output_number = random.uniform(0.0, 100.0)

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π float –æ—Ç 0.0 –¥–æ 1.0
        output_float = random.random()
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
        output_int = random.randint(0, sys.maxsize)

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ—Ä—Ç–µ–∂ —Å–æ –≤—Å–µ–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        return (seed, output_number, output_float, output_int)
