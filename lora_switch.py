from comfy_execution.graph import ExecutionBlocker


class LoraSwitchDynamic:
    """
    –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Å –ª–µ–Ω–∏–≤—ã–º–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è–º–∏.
    –°–æ–æ–±—â–∞–µ—Ç –¥–≤–∏–∂–∫—É, –∫–∞–∫—É—é –≤–µ—Ç–∫—É –≥—Ä–∞—Ñ–∞ –Ω—É–∂–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å,
    –¥–µ–ª–∞—è –Ω–æ–¥—ã-–±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∏ –Ω–µ–Ω—É–∂–Ω—ã–º–∏.
    """
    
    @classmethod
    def INPUT_TYPES(cls):
        # –í–ê–ñ–ù–û: –ú—ã –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–ª–∞–≥ "lazy": True –∫–æ –≤—Å–µ–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –≤—Ö–æ–¥–∞–º.
        # –≠—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç ComfyUI –Ω–µ –≤—ã—á–∏—Å–ª—è—Ç—å –∏—Ö, –ø–æ–∫–∞ –Ω–æ–¥–∞ –Ω–µ –ø–æ–ø—Ä–æ—Å–∏—Ç.
        optional_inputs = {}
        for i in range(1, 7): # –°–æ–∑–¥–∞–¥–∏–º 6 –ø–∞—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, JS —Å–º–æ–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ
            optional_inputs[f"model_{i}"] = ("MODEL", {"lazy": True})
            optional_inputs[f"clip_{i}"] = ("CLIP", {"lazy": True})

        return {
            "required": {
                "select": ("INT", {"default": 1, "min": 1, "max": 99}),
                "pairs": ("INT", {"default": 6, "min": 1, "max": 99}),
            },
            "optional": optional_inputs
        }

    RETURN_TYPES = ("MODEL", "CLIP")
    RETURN_NAMES = ("model", "clip")
    FUNCTION = "switch_pair"
    CATEGORY = "üòé SnJake/LoRA"

    def check_lazy_status(self, select, **kwargs):
        """
        –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –î–û –æ—Å–Ω–æ–≤–Ω–æ–≥–æ, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–∏–µ 'lazy' –≤—Ö–æ–¥—ã –Ω—É–∂–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å.
        """
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–∞—Ä—ã
        selected_index = select[0] # select –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ —Å–ø–∏—Å–æ–∫
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º–µ–Ω–∞ –Ω—É–∂–Ω—ã—Ö –Ω–∞–º –≤—Ö–æ–¥–æ–≤
        needed_model = f"model_{selected_index}"
        needed_clip = f"clip_{selected_index}"
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω —Ç–µ—Ö –≤—Ö–æ–¥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        return [needed_model, needed_clip]

    def switch_pair(self, select, pairs, **kwargs):
        """
        –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –ü–û–°–õ–ï —Ç–æ–≥–æ, –∫–∞–∫ ComfyUI –≤—ã—á–∏—Å–ª–∏—Ç
        —Ç–æ–ª—å–∫–æ —Ç–µ –≤—Ö–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –≤ check_lazy_status.
        """
        selected_index = select[0]
        
        model_key = f"model_{selected_index}"
        clip_key = f"clip_{selected_index}"

        # –¢–µ–ø–µ—Ä—å –º—ã –º–æ–∂–µ–º –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –≤ kwargs –µ—Å—Ç—å –Ω—É–∂–Ω—ã–µ –Ω–∞–º –¥–∞–Ω–Ω—ã–µ
        selected_model = kwargs.get(model_key)
        selected_clip = kwargs.get(clip_key)
        
        print(f"[LoraSwitchDynamic] Switching to pair #{selected_index}. Passing model: {type(selected_model)}, clip: {type(selected_clip)}")

        return (selected_model, selected_clip)




class LoraBlocker:
    """
    –ë–ª–æ–∫–∏—Ä—É–µ—Ç –∏–ª–∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Å–∏–≥–Ω–∞–ª MODEL –∏ CLIP.
    –ï—Å–ª–∏ 'select' –†–ê–í–ï–ù 'pass_on_select', —Å–∏–≥–Ω–∞–ª –ø—Ä–æ—Ö–æ–¥–∏—Ç.
    –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –Ω–æ–¥ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è.
    """
    
    @classmethod
    def INPUT_TYPES(cls):
        return {
            "required": {
                "model": ("MODEL",),
                "clip": ("CLIP",),
                "select": ("INT", {"default": 1, "min": 1, "max": 999}),
                "pass_on_select": ("INT", {"default": 1, "min": 1, "max": 999, "tooltip": "–ó–Ω–∞—á–µ–Ω–∏–µ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º —Å–∏–≥–Ω–∞–ª –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–π—Ç–∏"}),
            },
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç—ã–π –≤—Ö–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –Ω–æ–¥—ã
            "hidden": {"unique_id": "UNIQUE_ID"},
        }

    RETURN_TYPES = ("MODEL", "CLIP")
    FUNCTION = "block_or_pass"
    CATEGORY = "üòé SnJake/LoRA"

    def block_or_pass(self, model, clip, select, pass_on_select, unique_id):
        if select == pass_on_select:
            print(f"[LoraBlocker ID: {unique_id}] Pass -> (select: {select}, pass_on: {pass_on_select})")
            return (model, clip)
        else:
            print(f"[LoraBlocker ID: {unique_id}] Block -> (select: {select}, pass_on: {pass_on_select})")
            # --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–î–ï–°–¨ ---
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –û–î–ò–ù –æ–±—ä–µ–∫—Ç ExecutionBlocker. ComfyUI —Å–∞–º –∑–∞–±–ª–æ–∫–∏—Ä—É–µ—Ç –≤—Å–µ –≤—ã—Ö–æ–¥—ã.
            return ExecutionBlocker(None)
