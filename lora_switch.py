class LoraSwitchDynamic:
    """
    –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Å –ª–µ–Ω–∏–≤—ã–º–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è–º–∏.
    –°–æ–æ–±—â–∞–µ—Ç –¥–≤–∏–∂–∫—É, –∫–∞–∫—É—é –≤–µ—Ç–∫—É –≥—Ä–∞—Ñ–∞ –Ω—É–∂–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å,
    –¥–µ–ª–∞—è –Ω–æ–¥—ã-–±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∏ –Ω–µ–Ω—É–∂–Ω—ã–º–∏.
    """
    
    @classmethod
    def INPUT_TYPES(cls):

        optional_inputs = {}
        for i in range(1, 7): 
            optional_inputs[f"model_{i}"] = ("MODEL", {"lazy": True})
            optional_inputs[f"clip_{i}"] = ("CLIP", {"lazy": True})

        return {
            "required": {
                "select": ("INT", {"default": 1, "min": 1, "max": 99}),
                "pairs": ("INT", {"default": 6, "min": 1, "max": 99}),
            },
            "optional": optional_inputs
        }

    RETURN_TYPES = ("MODEL", "CLIP")
    RETURN_NAMES = ("model", "clip")
    FUNCTION = "switch_pair"
    CATEGORY = "üòé SnJake/LoRA"

    def check_lazy_status(self, select, **kwargs):
        """
        –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –î–û –æ—Å–Ω–æ–≤–Ω–æ–≥–æ, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–∏–µ 'lazy' –≤—Ö–æ–¥—ã –Ω—É–∂–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å.
        """
        # `select` - —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ (int), –∞ –Ω–µ —Å–ø–∏—Å–æ–∫. –£–±–∏—Ä–∞–µ–º [0].
        selected_index = select
        
        needed_model = f"model_{selected_index}"
        needed_clip = f"clip_{selected_index}"
        
        return [needed_model, needed_clip]

    def switch_pair(self, select, pairs, **kwargs):
        """
        –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –ü–û–°–õ–ï —Ç–æ–≥–æ, –∫–∞–∫ ComfyUI –≤—ã—á–∏—Å–ª–∏—Ç
        —Ç–æ–ª—å–∫–æ —Ç–µ –≤—Ö–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –≤ check_lazy_status.
        """
        # `select` - —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ (int), –∞ –Ω–µ —Å–ø–∏—Å–æ–∫. –£–±–∏—Ä–∞–µ–º [0].
        selected_index = select
        
        model_key = f"model_{selected_index}"
        clip_key = f"clip_{selected_index}"

        selected_model = kwargs.get(model_key)
        selected_clip = kwargs.get(clip_key)
        
        print(f"[LoraSwitchDynamic] Switching to pair #{selected_index}. Passing model: {type(selected_model)}, clip: {type(selected_clip)}")

        return (selected_model, selected_clip)
