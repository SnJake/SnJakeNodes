class LoraSwitchDynamic:
    @classmethod
    def INPUT_TYPES(cls):
        optional_inputs = {}
        # –æ–±—ä—è–≤–ª—è–µ–º –¥–æ 99 –ø–∞—Ä, —á—Ç–æ–±—ã UI –∏ –±—ç–∫–µ–Ω–¥ –±—ã–ª–∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω—ã
        for i in range(1, 100):
            optional_inputs[f"model_{i}"] = ("MODEL", {"lazy": True})
            optional_inputs[f"clip_{i}"] = ("CLIP", {"lazy": True})

        return {
            "required": {
                "select": ("INT", {"default": 1, "min": 1, "max": 99}),
                "pairs": ("INT", {"default": 6, "min": 1, "max": 99}),
            },
            "optional": optional_inputs,
        }

    RETURN_TYPES = ("MODEL", "CLIP")
    RETURN_NAMES = ("model", "clip")
    FUNCTION = "switch_pair"
    CATEGORY = "üòé SnJake/LoRA"

    # –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ lazy-–Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∞ –≤—Ö–æ–¥–∞—Ö ‚Äî –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ö—É–∫ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω.
    # –ù–æ–¥–∞ —á–∏—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–∞—Ä—É, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤—Ö–æ–¥—ã –Ω–µ —Ç—Ä–æ–≥–∞–µ—Ç.

    def switch_pair(self, select, pairs, **kwargs):
        idx = int(select)
        total = int(pairs)

        if total < 1:
            raise ValueError("[LoraSwitchDynamic] pairs < 1")
        if idx < 1:
            idx = 1
        if idx > total:
            idx = total

        m_key = f"model_{idx}"
        c_key = f"clip_{idx}"

        model = kwargs.get(m_key, None)
        clip = kwargs.get(c_key, None)

        if model is None or clip is None:
            raise ValueError(
                f"[LoraSwitchDynamic] –ü–∞—Ä–∞ #{idx} –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞: {m_key}={type(model)}, {c_key}={type(clip)}"
            )

        print(f"[LoraSwitchDynamic] pair #{idx} -> model:{type(model)}, clip:{type(clip)}")
        return (model, clip)
