class MultilinePromptSelector:
    CATEGORY = "üòé SnJake/Utils"
    FUNCTION = "choose_prompt"
    RETURN_TYPES = ("STRING",)
    RETURN_NAMES = ("Selected Prompt",)

    @classmethod
    def INPUT_TYPES(cls):
        return {
            "required": {
                # –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–æ–º–ø—Ç–æ–≤
                "prompts": ("STRING", {
                    "multiline": True,
                    "placeholder": "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–ø—Ç—ã, –∫–∞–∂–¥—ã–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏"
                }),
                # –ß–∏—Å–ª–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–æ–∫–∏ (1-–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è)
                "select": ("INT", {
                    "default": 1,
                    "min": 1,
                    "max": 999999,
                    "step": 1,
                    "tooltip": "–ù–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞"
                }),
            },
            "hidden": {
                # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É–∑–ª–∞ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –ª–æ–≥–∏–∫–µ, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
                "unique_id": "UNIQUE_ID"
            }
        }

    def choose_prompt(self, prompts, select, unique_id):
        # –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø—É—Å—Ç—ã—Ö
        lines = prompts.splitlines()
        # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
        if select < 1 or select > len(lines):
            return ("",)
        chosen = lines[select - 1]
        # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–∞ (–ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–±–µ–ª–æ–≤), —É–∑–µ–ª –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–≤–æ–¥–∏—Ç (–ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç)
        if not chosen.strip():
            return ("",)
        return (chosen,)
